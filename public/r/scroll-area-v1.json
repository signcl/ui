{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-area-v1",
  "type": "registry:component",
  "title": "Scroll Area V1",
  "description": "Scroll area v1 component",
  "files": [
    {
      "path": "components/ui/scroll-area-v1.tsx",
      "content": "'use client'\n\nimport * as RadixScrollArea from '@radix-ui/react-scroll-area'\n// Migrated and modifed from Mantine v6 and shadcn ScrollArea component\n// https://github.com/mantinedev/mantine/tree/v6/src/mantine-core/src/ScrollArea\n// https://ui.shadcn.com/docs/components/scroll-area\nimport type React from 'react'\nimport { forwardRef } from 'react'\n\nimport { cn } from '@/lib/cn'\n\nexport interface ScrollAreaProps extends React.ComponentPropsWithoutRef<typeof RadixScrollArea.Root> {\n  /** Scrollbar size in pixels */\n  scrollbarSize?: number\n\n  /** Should scrollbars be offset with padding */\n  offsetScrollbars?: boolean\n\n  /** Get viewport ref */\n  viewportRef?: React.ForwardedRef<React.ElementRef<typeof RadixScrollArea.Viewport>>\n\n  /** Props added to the viewport element */\n  // viewportProps?: React.ComponentPropsWithRef<'div'>\n  viewportProps?: React.ComponentPropsWithRef<typeof RadixScrollArea.Viewport>\n\n  /** Subscribe to scroll position changes */\n  onScrollPositionChange?(position: { x: number; y: number }): void\n}\n\nexport const ScrollArea = forwardRef<React.ElementRef<typeof RadixScrollArea.Root>, ScrollAreaProps>(\n  (\n    {\n      className,\n      children,\n      scrollbarSize = 12,\n      offsetScrollbars = false,\n      viewportRef,\n      viewportProps,\n      onScrollPositionChange,\n      ...props\n    },\n    ref\n  ) => {\n    const { className: viewportClassName, ...restViewportProps } = viewportProps || {}\n\n    return (\n      <RadixScrollArea.Root ref={ref} className={cn('relative overflow-hidden', className)} {...props}>\n        <RadixScrollArea.Viewport\n          ref={viewportRef}\n          className={cn(\n            'scroll-area size-full',\n            // https://github.com/radix-ui/primitives/issues/926\n            '[&>div]:block!',\n            offsetScrollbars && {\n              'pr-(--scrollbar-size)': true,\n              'pb-(--scrollbar-size)': true,\n            },\n            viewportClassName\n          )}\n          style={{ '--scrollbar-size': `${scrollbarSize}px` } as React.CSSProperties}\n          onScroll={\n            typeof onScrollPositionChange === 'function'\n              ? ({ currentTarget }) =>\n                  onScrollPositionChange({\n                    x: currentTarget.scrollLeft,\n                    y: currentTarget.scrollTop,\n                  })\n              : undefined\n          }\n          {...restViewportProps}\n        >\n          {children}\n        </RadixScrollArea.Viewport>\n\n        <RadixScrollArea.Scrollbar\n          orientation='vertical'\n          className='bg-fg/0 hover:bg-fg/5 flex touch-none p-0.5 transition-colors duration-150 ease-out select-none data-[orientation=horizontal]:h-2 data-[orientation=horizontal]:flex-col data-[orientation=vertical]:w-2'\n        >\n          <RadixScrollArea.Thumb className='bg-fg/40 hover:bg-fg/80 relative flex-1 rounded-[10px] before:absolute before:top-1/2 before:left-1/2 before:size-full before:min-h-6 before:min-w-6 before:-translate-x-1/2 before:-translate-y-1/2' />\n        </RadixScrollArea.Scrollbar>\n\n        <RadixScrollArea.Scrollbar\n          orientation='horizontal'\n          className='bg-fg/0 hover:bg-fg/5 flex touch-none p-0.5 transition-colors duration-150 ease-out select-none data-[orientation=horizontal]:h-2 data-[orientation=horizontal]:flex-col data-[orientation=vertical]:w-2'\n        >\n          <RadixScrollArea.Thumb className='bg-fg/40 hover:bg-fg/80 relative flex-1 rounded-[10px] before:absolute before:top-1/2 before:left-1/2 before:size-full before:min-h-6 before:min-w-6 before:-translate-x-1/2 before:-translate-y-1/2' />\n        </RadixScrollArea.Scrollbar>\n\n        {/* scrollbar background is transparent by default, so no needs for this component */}\n        <RadixScrollArea.Corner />\n      </RadixScrollArea.Root>\n    )\n  }\n)\n\nScrollArea.displayName = 'ScrollArea'\n",
      "type": "registry:component"
    },
    {
      "path": "lib/cn.ts",
      "content": "import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib"
    }
  ]
}