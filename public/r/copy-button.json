{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "copy-button",
  "type": "registry:component",
  "title": "Copy Button",
  "description": "Copy button component with copied state",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "components/ui/copy-button.tsx",
      "content": "'use client'\n\nimport { useCopyToClipboard } from '@/utils/use-copy-to-clipboard'\n\ninterface CopyButtonProps {\n  /**\n   * The value to copy to clipboard\n   */\n  value: string\n  /**\n   * Time in milliseconds that the copied state should persist\n   */\n  timeout?: number\n  /**\n   * Render prop that provides the copied state and copy function\n   */\n  children: (props: {\n    /**\n     * Whether the value has been copied to the clipboard\n     */\n    copied: boolean\n    /**\n     * Function to copy the value to the clipboard\n     */\n    copy: () => void\n  }) => React.ReactNode\n  /**\n   * Optional className for the wrapper div\n   */\n  className?: string\n}\n\nexport function CopyButton({ value, timeout, children, className }: CopyButtonProps) {\n  const { isCopied, copyToClipboard } = useCopyToClipboard({ timeout })\n\n  const handleCopy = () => {\n    copyToClipboard(value)\n  }\n\n  return (\n    <div className={className}>\n      {children({\n        copied: Boolean(isCopied),\n        copy: handleCopy,\n      })}\n    </div>\n  )\n}\n\n// Example usage with default components\n// export function DefaultCopyButton({ value, timeout = 2000 }: { value: string; timeout?: number }) {\n//   return (\n//     <CopyButton value={value} timeout={timeout}>\n//       {({ copied, copy }) => (\n//         <Tooltip>\n//           <Tooltip.Trigger asChild>\n//             <Button onClick={copy} disabled={!value} className='p-2' variant={copied ? 'default' : 'ghost'} size='icon'>\n//               {copied ? <Check className='h-4 w-4' /> : <Copy className='h-4 w-4' />}\n//               <span className='sr-only'>{copied ? 'Copied' : 'Copy to clipboard'}</span>\n//             </Button>\n//           </Tooltip.Trigger>\n//           <Tooltip.Content>\n//             <p>{copied ? 'Copied to clipboard' : 'Copy to clipboard'}</p>\n//           </Tooltip.Content>\n//         </Tooltip>\n//       )}\n//     </CopyButton>\n//   )\n// }\n",
      "type": "registry:component"
    },
    {
      "path": "utils/use-copy-to-clipboard.ts",
      "content": "'use client'\n\nimport { useState } from 'react'\n\nexport interface useCopyToClipboardProps {\n  timeout?: number\n}\n\nexport function useCopyToClipboard(props?: useCopyToClipboardProps) {\n  const timeout = props?.timeout ?? 2000\n  const [isCopied, setIsCopied] = useState<Boolean>(false)\n\n  const copyToClipboard = (value: string) => {\n    if (typeof window === 'undefined' || !navigator.clipboard?.writeText) {\n      return\n    }\n\n    if (!value) {\n      return\n    }\n\n    navigator.clipboard.writeText(value).then(() => {\n      setIsCopied(true)\n\n      setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n    })\n  }\n\n  return { isCopied, copyToClipboard }\n}\n",
      "type": "registry:lib"
    }
  ]
}