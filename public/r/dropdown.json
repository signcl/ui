{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropdown",
  "type": "registry:component",
  "title": "Dropdown Menu",
  "description": "Dropdown menu component",
  "files": [
    {
      "path": "components/ui/dropdown.tsx",
      "content": "'use client'\n\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport { IconCheck, IconChevronRight, IconCircleFilled } from '@tabler/icons-react'\nimport type * as React from 'react'\n\nimport { cn } from '@/lib/cn'\n\nfunction DropdownMenu({ ...props }: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot='dropdown-menu' {...props} />\n}\n\nfunction DropdownMenuPortal({ ...props }: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return <DropdownMenuPrimitive.Portal data-slot='dropdown-menu-portal' {...props} />\n}\n\nfunction DropdownMenuTrigger({ ...props }: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return <DropdownMenuPrimitive.Trigger data-slot='dropdown-menu-trigger' {...props} />\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot='dropdown-menu-content'\n        sideOffset={sideOffset}\n        className={cn(\n          'floating text-fg min-w-[8rem] overflow-hidden rounded-md border px-0 py-1',\n          // max size config\n          'max-h-[var(--radix-dropdown-menu-content-available-height)] max-w-[var(--radix-dropdown-menu-content-available-width)] overflow-y-auto',\n          // copied from shadcn\n          'data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n          className\n        )}\n        collisionPadding={5}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({ ...props }: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return <DropdownMenuPrimitive.Group data-slot='dropdown-menu-group' {...props} />\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  tint = 'accent',\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  tint?: 'accent' | 'rose'\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot='dropdown-menu-item'\n      data-inset={inset}\n      data-tint={tint}\n      className={cn(\n        'focus:bg-ac/10 focus:text-ac relative flex cursor-default gap-2 px-3 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8',\n\n        // Icon\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 [&_svg]:mt-0.5\",\n\n        // Tint Rose\n        // Mapped to shadcn variant=destructive\n        'data-[tint=rose]:text-rose-500 data-[tint=rose]:focus:bg-rose-500/10 dark:data-[tint=rose]:focus:bg-rose-500/20 data-[tint=rose]:focus:text-rose-500 data-[tint=rose]:*:[svg]:!text-rose-500',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  hideIndicator,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem> & {\n  hideIndicator?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot='dropdown-menu-checkbox-item'\n      className={cn(\n        'focus:bg-ac/10 focus:text-ac relative flex cursor-default gap-2 py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\n        // Icon\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 [&_svg]:mt-0.5\",\n\n        hideIndicator && 'data-[state=checked]:text-ac pl-2',\n\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      {!hideIndicator && (\n        <span className='pointer-events-none absolute left-2 top-1.5 flex size-4 justify-center'>\n          <DropdownMenuPrimitive.ItemIndicator>\n            <IconCheck className='size-4' />\n          </DropdownMenuPrimitive.ItemIndicator>\n        </span>\n      )}\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({ ...props }: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return <DropdownMenuPrimitive.RadioGroup data-slot='dropdown-menu-radio-group' {...props} />\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  hideIndicator,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem> & {\n  hideIndicator?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot='dropdown-menu-radio-item'\n      className={cn(\n        'focus:bg-ac/10 focus:text-ac relative flex cursor-default gap-2 py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\n        // Icon\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 [&_svg]:mt-0.5\",\n\n        hideIndicator && 'data-[state=checked]:text-ac pl-2',\n        className\n      )}\n      {...props}\n    >\n      {!hideIndicator && (\n        <span className='pointer-events-none absolute left-2 top-2.5 flex size-4 justify-center'>\n          <DropdownMenuPrimitive.ItemIndicator>\n            <IconCircleFilled className='size-2' />\n          </DropdownMenuPrimitive.ItemIndicator>\n        </span>\n      )}\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot='dropdown-menu-label'\n      data-inset={inset}\n      className={cn('text-fg/60 px-2 py-1.5 text-xs leading-none uppercase data-[inset]:pl-8', className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({ className, ...props }: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot='dropdown-menu-separator'\n      className={cn('bg-fg/5 -mx-1 h-1', className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({ className, ...props }: React.ComponentProps<'span'>) {\n  return (\n    <span\n      data-slot='dropdown-menu-shortcut'\n      className={cn('opacity-60 ml-auto text-xs tracking-widest mt-0.5', className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({ ...props }: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot='dropdown-menu-sub' {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot='dropdown-menu-sub-trigger'\n      data-inset={inset}\n      className={cn(\n        'focus:bg-ac/10 focus:text-ac flex cursor-default gap-2 px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8',\n        'data-[state=open]:bg-fg/5',\n        'data-[state=open]:data-[highlighted]:bg-ac/10 data-[state=open]:data-[highlighted]:text-ac',\n\n        // Icon\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 [&_svg]:mt-0.5\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <IconChevronRight className='ml-auto size-4' />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  sideOffset = -4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.SubContent\n        data-slot='dropdown-menu-sub-content'\n        sideOffset={sideOffset}\n        className={cn(\n          'floating text-fg min-w-[8rem] overflow-hidden rounded-md border px-0 py-1',\n          'max-h-[var(--radix-dropdown-menu-content-available-height)] max-w-[var(--radix-dropdown-menu-content-available-width)] overflow-y-auto',\n          'data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-(--radix-dropdown-menu-content-transform-origin)',\n          className\n        )}\n        collisionPadding={5}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n",
      "type": "registry:component"
    },
    {
      "path": "lib/cn.ts",
      "content": "import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib"
    }
  ]
}