{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle",
  "type": "registry:component",
  "title": "Toggle",
  "description": "Toggle component",
  "files": [
    {
      "path": "components/ui/toggle.tsx",
      "content": "'use client'\n\nimport * as TogglePrimitive from '@radix-ui/react-toggle'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport type * as React from 'react'\n\nimport { cn } from '@/lib/cn'\n\nconst toggleVariants = cva(\n  'inline-flex items-center justify-center rounded-md font-medium focus-ring hover:bg-fg/5 hover:text-ac disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-ac/10 data-[state=on]:text-ac [&_svg]:pointer-events-none [&_svg]:shrink-0 gap-1',\n  {\n    variants: {\n      variant: {\n        default: 'border border-transparent',\n        outline: 'border hover:bg-fg/5 hover:text-ac hover:border-fg/40 data-[state=on]:border-ac',\n        // icon: 'border border-transparent',\n      },\n      // Should match Button\n      size: {\n        sm: 'text-xs rounded-sm h-6 px-2',\n        default: 'text-sm rounded-md h-8 px-3',\n        lg: 'text-base rounded-md h-10 px-4',\n        'icon-sm': 'text-xs rounded-sm size-6 [&>svg]:size-3',\n        icon: 'text-sm rounded-md size-8 [&>svg]:size-4',\n        'icon-lg': 'text-base rounded-md size-10 [&>svg]:size-5',\n      },\n    },\n    // compoundVariants: [\n    //   {\n    //     variant: 'icon',\n    //     size: 'sm',\n    //     className: 'w-6 [&_svg]:size-3',\n    //   },\n    //   {\n    //     variant: 'icon',\n    //     size: 'default',\n    //     className: 'w-8 [&_svg]:size-4',\n    //   },\n    //   {\n    //     variant: 'icon',\n    //     size: 'lg',\n    //     className: 'w-10 [&_svg]:size-5',\n    //   },\n    // ],\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\nfunction Toggle({\n  className,\n  variant,\n  size,\n  ...props\n}: React.ComponentProps<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>) {\n  return (\n    <TogglePrimitive.Root data-slot='toggle' className={cn(toggleVariants({ variant, size, className }))} {...props} />\n  )\n}\n\nexport { Toggle, toggleVariants }\n",
      "type": "registry:component"
    },
    {
      "path": "lib/cn.ts",
      "content": "import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib"
    }
  ]
}