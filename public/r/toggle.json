{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toggle",
  "type": "registry:component",
  "title": "Toggle",
  "description": "Toggle component",
  "files": [
    {
      "path": "components/ui/toggle.tsx",
      "content": "'use client'\n\nimport * as TogglePrimitive from '@radix-ui/react-toggle'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '@/lib/cn'\n\nconst toggleVariants = cva(\n  'inline-flex items-center justify-center rounded-md font-medium focus-ring hover:bg-fg/5 hover:text-ac disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-ac/10 data-[state=on]:text-ac [&_svg]:pointer-events-none [&_svg]:shrink-0 gap-1',\n  {\n    variants: {\n      variant: {\n        default: 'border border-transparent',\n        outline: 'border hover:bg-fg/5 hover:text-ac hover:border-fg/40 data-[state=on]:border-ac',\n        icon: 'border border-transparent',\n      },\n      size: {\n        sm: 'text-xs px-2 py-[calc(0.25rem-1px)] rounded-sm',\n        default: 'text-base px-2.5 py-[calc(0.25rem-1px)]',\n        lg: 'text-lg px-3 py-[calc(0.25rem-1px)]',\n      },\n    },\n    compoundVariants: [\n      {\n        variant: 'icon',\n        size: 'sm',\n        className: 'text-xs p-[calc(0.25rem-1px)] rounded-sm [&_svg]:size-4',\n      },\n      {\n        variant: 'icon',\n        size: 'default',\n        className: 'text-base p-[calc(0.25rem-1px)] [&_svg]:size-6',\n      },\n      {\n        variant: 'icon',\n        size: 'lg',\n        className: 'text-lg p-[calc(0.25rem-1px)] [&_svg]:size-7',\n      },\n    ],\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ComponentRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root ref={ref} className={cn(toggleVariants({ variant, size, className }))} {...props} />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n",
      "type": "registry:component"
    },
    {
      "path": "lib/cn.ts",
      "content": "import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib"
    }
  ]
}