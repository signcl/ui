{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "breadcrumb",
  "type": "registry:component",
  "title": "Breadcrumb",
  "description": "Breadcrumb component",
  "files": [
    {
      "path": "components/ui/breadcrumb.tsx",
      "content": "import { Slot } from '@radix-ui/react-slot'\nimport { IconChevronRight, IconDots } from '@tabler/icons-react'\nimport type * as React from 'react'\n\nimport { cn } from '@/lib/cn'\n\nfunction Breadcrumb({ ...props }: React.ComponentProps<'nav'>) {\n  return <nav aria-label='breadcrumb' data-slot='breadcrumb' {...props} />\n}\n\nfunction BreadcrumbList({ className, ...props }: React.ComponentProps<'ol'>) {\n  return (\n    <ol\n      data-slot='breadcrumb-list'\n      className={cn('text-fg/60 flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5', className)}\n      {...props}\n    />\n  )\n}\n\nfunction BreadcrumbItem({ className, ...props }: React.ComponentProps<'li'>) {\n  return <li data-slot='breadcrumb-item' className={cn('inline-flex items-center gap-1.5', className)} {...props} />\n}\n\nfunction BreadcrumbLink({\n  asChild,\n  className,\n  ...props\n}: React.ComponentProps<'a'> & {\n  asChild?: boolean\n}) {\n  const Comp = asChild ? Slot : 'a'\n\n  return <Comp data-slot='breadcrumb-link' className={cn('hover:text-fg', className)} {...props} />\n}\n\nfunction BreadcrumbPage({ className, ...props }: React.ComponentProps<'span'>) {\n  return (\n    // biome-ignore lint/a11y/useFocusableInteractive: expected component\n    // biome-ignore lint/a11y/useSemanticElements: expected role link\n    <span\n      data-slot='breadcrumb-page'\n      role='link'\n      aria-disabled='true'\n      aria-current='page'\n      className={cn('text-fg font-normal', className)}\n      {...props}\n    />\n  )\n}\n\nfunction BreadcrumbSeparator({ children, className, ...props }: React.ComponentProps<'li'>) {\n  return (\n    <li\n      data-slot='breadcrumb-separator'\n      role='presentation'\n      aria-hidden='true'\n      className={cn('[&>svg]:size-3.5', className)}\n      {...props}\n    >\n      {children ?? <IconChevronRight />}\n    </li>\n  )\n}\n\nfunction BreadcrumbEllipsis({ className, ...props }: React.ComponentProps<'span'>) {\n  return (\n    <span\n      data-slot='breadcrumb-ellipsis'\n      role='presentation'\n      aria-hidden='true'\n      className={cn('flex size-9 items-center justify-center', className)}\n      {...props}\n    >\n      <IconDots className='size-4' />\n      <span className='sr-only'>More</span>\n    </span>\n  )\n}\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n",
      "type": "registry:component"
    },
    {
      "path": "lib/cn.ts",
      "content": "import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib"
    }
  ]
}